

Arduino => Baca data & datanya dikirim ke MQTT | Menerima data kontrol dari streamlit melalui MQTT
Kode Python => Ambil data dari MQTT dan diteruskan ke MongoDB
Streamlit => Ambil data dari MongoDB dan tampilkan di web, Control sensor melalui data yang dikirim ke MQTT

ada 2 topic:
1. Arduino: pubs sensor/read,  sub sensor/control
2. Kode python: sub sensor/read
3. Streamlit: sub sensor/read, pub sensor/control

Saya sedang membuat sebuah aplikasi streamlit yang bisa menampilkan data sensor yang diambil dari MongoDB. Selain itu, aplikasi streamlit juga bisa melakukan kontrol terhadap aktuator di ESP32. Juga terdapat kode arduino untuk membaca data dari sensor, dan kemudian melakukan publish data sensor tersebut ke MQTT topic tertentu. Kode .ino ini juga memiliki mekanisme kontrol aktuator yang dibaca dari topic MQTT tertentu juga. Kontrol terhadap aktuator hanya bisa dilakukan melalui aplikasi streamlit saja. Juga terdapat kode python flask, untuk mengambil data sensor dari MQTT topic tertentu, lalu menyimpannya ke MongoDB.

Arsitektur yang digunakan pada project IoT ini menggunakan ESP32 dan ESP8266. Pada ESP32 terhubung melalui koneksi Wi-Fi, sensor LUX, dan LED. Lalu, terhubung ke ESP8266 melalui topologi mesh. Pada ESP8266, terhubung dengan sensor DHT, Motor DC, dan Logic Converter. Terdapat sensor pengukuran daya tegangan pada kedua ESP tersebut. Kedua ESP terhubung dengan topologi mesh. Anda bisa menggunakan referensi berikut untuk menghubungkan ESP32 dan ESP8266 melalui topologi mesh:
https://randomnerdtutorials.com/esp-mesh-esp32-esp8266-painlessmesh/

Berikut alur data yang saya rencanakan untuk membuatnya, anda bisa memodifikasinya jika terdapat rancangan alur data yang lebih baik:
```
Arduino => Baca data & datanya dikirim ke MQTT | Menerima data kontrol dari streamlit melalui MQTT
Kode Python => Ambil data dari MQTT dan diteruskan ke MongoDB
Streamlit => Ambil data dari MongoDB dan tampilkan di web, Control sensor melalui data yang dikirim ke MQTT

ada 2 topic:
1. Arduino: pubs sensor/read,  sub sensor/control
2. Kode python: sub sensor/read
3. Streamlit: sub sensor/read, pub sensor/control
```

=====

smart_home.device_status:
```
{
  "_id": {
    "$oid": "68365e4e0bbe61c842762d5f"
  },
  "device": "lampu",
  "state": "OFF",
  "last_updated": {
    "$date": "2025-05-28T07:59:50.014Z"
  }
}
```

smart_home.sensor_data:
```
{
  "_id": {
    "$oid": "683651147d72a857fc3618ef"
  },
  "node": "kipas",
  "lux": 195.06,
  "temperature": 28.5,
  "humidity": 69,
  "lampu": "OFF",
  "kipas": "ON",
  "daya": 92,
  "timestamp": {
    "$date": "2025-05-28T06:56:04.238Z"
  }
}
```

ESP32:
- Sensor LUX & LED
- terhubung ke Wi-FI

ESP8266
- DHT
- Motor DC + Logic Converter

Kedua ESP terhubung dengan kabel serial RX TX.

Terdapat sensor pengukuran daya tegangan pada kedua ESP tersebut.

Mesh?


transmisi data menggunakan mesh
1 terhubung router
lainnya pairing dengan esp lainnya untuk berkomunikasin ke esp ke-1







Melakukan kontrol LED melalui aplikasi Streamlit.
3 kode:
Streamlit:
- menampilkan status LED saat ini
- kontrol LED dengan melakukan pub ke mqtt topic 2

Flask:
- Sub mqtt topic 1 (data sensor)
- publish data mqtt yang diambil tadi ke DB mongoDB

Arduino:
- Baca data sensor
- Publish data sensor ke mqtt ke topic 1
- Sub data kontrol ke topic 2

konfigurasi mqtt:
MQTT_BROKER = "f6edeb4adb7c402ca7291dd7ef4d8fc5.s1.eu.hivemq.cloud"
MQTT_PORT = 8883
MQTT_USER = "hivemq.webclient.1747043871321"
MQTT_PASSWORD = "ab45PjNdISi;Bf9>2,G#"
MQTT_CLIENT_ID = "MicroPython_Sensor_001"
MQTT_SENSOR_TOPIC = "starswechase/sungai/sensor/data"
MQTT_STATUS_TOPIC = "starswechase/sungai/sensor/status"

link:
https://console.hivemq.cloud/

Gateway Role: Perangkat ini (disarankan ESP32) bertugas:
- Terhubung ke WiFi dan HiveMQ Cloud melalui MQTT.
- Menerima data sensor dari jaringan mesh dan meneruskannya ke MQTT.
- Menerima perintah kontrol dari MQTT dan meneruskannya ke jaringan mesh.

Node Role: Perangkat ini (bisa ESP32 atau ESP8266) bertugas:
- Mengumpulkan data sensor (lux, suhu, kelembapan).
- Mengontrol aktuator (lampu/LED dan kipas/motor) berdasarkan perintah dari Gateway melalui mesh.
- Mengirimkan data sensor ke Gateway melalui mesh.